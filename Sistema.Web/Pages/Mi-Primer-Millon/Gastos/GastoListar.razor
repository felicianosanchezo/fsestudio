@page "/gasto-listar"
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@inject SweetAlertService sweetAlertService
@inject AuthenticationProviderJWT AuthProvider



<div class="dashboard-main">
    <div class="form-group row">
        <div class="col-sm-10">
            <button class="primary-button" onclick="location.href='/gasto-insertar'">Nuevo Gasto</button>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-10">
            <button class="custom-btn" onclick="location.href='/gasto-insertar">
                <i class="bi bi-person-plus"></i> Nuevo Gasto
            </button>
        </div>
    </div>
    <ListaGenerica MiLista="Gastos">
        <Cargando>
            <p>Estoy en ello....</p>
        </Cargando>
        <Cuerpo>
            <div class="table-container">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Fecha</th>
                            <th>Total</th>
                            <th>Concepto</th>
                            <th>Cartera</th>
                            <th>Cuenta</th>
                            <th>Categoria</th>
                            <th>Mas</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (GastoDTO c in Gastos)
                        {
                            <tr>
                                <td>@c.Fecha.ToShortDateString()</td>
                                <td>@c.Total.ToString("C")</td>
                                <td>@c.Concepto</td>
                                <td>@c.Cartera</td>
                                <td>@c.Cuenta</td>
                                <td>@c.Categoria</td>






  @*                               <td class="button-cell">
                                    <button type="button" class="actualizar-button" href="/gasto-actualizar/@c.IdGasto">Actualizar</button>
                                </td>
                                <td class="button-cell">
                                    <button type="button" class="eliminar-button" @onclick=@(()=>Eliminar(c.IdGasto))>Eliminar</button>
                                </td>
 *@











                                <td>
                                    <div class="dropdown">
                                        <button class="btn btn-link p-0 m-0" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="bi bi-three-dots-vertical"></i>
                                        </button>

                                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">


                                            <li>
                                                <a class="dropdown-item" @* href="javascript:void(0)" @onclick="() => NavegarModificar(servicio.IdServicio_Colaborador) *@">
                                                    <i class="bi bi-pencil me-2"></i> Modificar
                                                </a>
                                            </li>


                                            <li>
                                                <a class="dropdown-item" @* href="javascript:void(0)" @onclick="() => ConfirmarEliminarServicio(servicio.IdServicio_Colaborador) *@">
                                                    <i class="bi bi-trash me-2"></i> Eliminar Servicio
                                                </a>
                                            </li>

                                            <li><a class="dropdown-item" href="#">Acción 3</a></li>
                                        </ul>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </Cuerpo>
    </ListaGenerica>
    <br />
    <br />
</div>




@code {
    public List<GastoDTO>? Gastos { get; set; }
    public int IdUsuario { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity.IsAuthenticated)
        {
            // Redirige al usuario a la página de inicio de sesión si no está autenticado
            navigationManager.NavigateTo("/");
            return;
        }

        IdUsuario = AuthProvider.GetIdUsuario(); // Obtener el IdUsuario desde los claims
        await Cargar();
    }

    private async Task Cargar()
    {
        var response = await repositorio.Get<List<GastoDTO>>($"/api/gasto/listar/{IdUsuario}");
        Gastos = response.Response;
    }

    private async Task Eliminar(int id)
    {
        var result = await sweetAlertService.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = "¿Estás seguro de eliminar el gasto?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                CancelButtonText = "No",
                ConfirmButtonText = "Si"
            });

        if (result.IsConfirmed)
        {
            var respuestaHttp = await repositorio.Delete($"/api/gasto/eliminar/{id}");
            if (respuestaHttp.Error)
            {
                if (respuestaHttp.HttpResponseMessage.StatusCode != System.Net.HttpStatusCode.NotFound)
                {
                    var message = await respuestaHttp.GetErrorMessageAsync();
                    await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
                    return;
                }
            }

            await Cargar();
            navigationManager.NavigateTo("/gasto-listar");
        }
    }





}


<link href="css/site.css" rel="stylesheet" />