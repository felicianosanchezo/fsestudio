@page "/portafolio-listar"
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@inject SweetAlertService sweetAlertService
@inject IJSRuntime JS

<div class="dashboard-main2">
    <div class="form-group row mb-3">
        <div class="col-sm-10">
            <button class="custom-btn" @onclick="NavegarAInsertar">
                <i class="bi bi-file-earmark-plus"></i> Nuevo Proyecto
            </button>
        </div>
    </div>

    <ListaGenerica MiLista="ListaPortafolio">
        <Cargando>
            <p>Cargando portafolio...</p>
        </Cargando>
        <Cuerpo>
            <div class="table-container2">
                <table class="table2">
                    <thead>
                        <tr>
                        @*     <th>Id</th> *@
                            <th class="col-especificaciones">Nombre</th>
                      @*       <th>Categoría</th>
                            <th>Ubicación</th> *@
                      @*       <th>Fecha</th> *@
                            <th class="col-descripcion">Descripción</th>
                            <th class="col-especificaciones">Especificaciones</th>
                            <th>Área construida</th>
                            <th>Área terreno</th>
                            <th>Activo</th>
                            <th>Portada</th>
                            <th>Imagen1</th>
                            <th>Imagen2</th>
                            <th>Imagen3</th>
                            <th>Imagen4</th>
                            <th>Imagen5</th>
                            <th>Imagen6</th>
                            <th>Acciones</th>


                        </tr>
                    </thead>
                    <tbody>
                        @if (ListaPortafolio != null && ListaPortafolio.Any())
                        {
                            @foreach (var item in ListaPortafolio)
                            {
                                <tr>
                              @*       <td>@item.IdPortafolio</td> *@
                                    <td class="col-especificaciones">@item.Nombre</td>
                         @*            <td>@item.Categoria</td>
                                    <td>@item.Ubicacion</td>
                                    <td>@item.Fecha.ToShortDateString()</td> *@
                                    <td class="col-descripcion" >@item.Descripcion</td>
                                    <td class="col-especificaciones">@item.Areas</td>


                                    <td>@item.SuperficieConstruidaM2 m²</td>
                                    <td>@item.SuperficieTerrenoM2 m²</td>
                                    <td>@(item.Activo ? "Sí" : "No")</td>
                                    <td>
                                        <img src="@item.PortadaUrl" alt="Portada" width="100" style="object-fit: cover; border-radius: 5px;" />
                                    </td>
                                    <td>
                                        <img src="@item.Imagen1Url" alt="Portada" width="100" style="object-fit: cover; border-radius: 5px;" />
                                    </td>
                                    <td>
                                        <img src="@item.Imagen2Url" alt="Portada" width="100" style="object-fit: cover; border-radius: 5px;" />
                                    </td>
                                    <td>
                                        <img src="@item.Imagen3Url" alt="Portada" width="100" style="object-fit: cover; border-radius: 5px;" />
                                    </td>

                                    <td>
                                        <img src="@item.Imagen4Url" alt="Portada" width="100" style="object-fit: cover; border-radius: 5px;" />
                                    </td>

                                    <td>
                                        <img src="@item.Imagen5Url" alt="Portada" width="100" style="object-fit: cover; border-radius: 5px;" />
                                    </td>
                                    <td>
                                        <img src="@item.Imagen6Url" alt="Portada" width="100" style="object-fit: cover; border-radius: 5px;" />
                                    </td>



                                    <td>
                                        <div class="dropdown eliminar-button">
                                            <button class="custom-btn" type="button" data-bs-toggle="dropdown">
                                                <i class="bi bi-three-dots-vertical"></i>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a class="dropdown-item" @onclick="() => NavegarAEditar(item.IdPortafolio)">Editar</a></li>
                                                <li><a class="dropdown-item" @onclick="() => ConfirmarEliminar(item.IdPortafolio)">Eliminar</a></li>
                                                <li><a class="dropdown-item" @onclick="() => ConfirmarEliminar(item.IdPortafolio)">Desactivar</a></li>
                                                <li><a class="dropdown-item" @onclick="() => ConfirmarEliminar(item.IdPortafolio)">Ordenar</a></li>
                                            
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="9">No hay proyectos registrados aún.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </Cuerpo>
    </ListaGenerica>
</div>

@code {
    private List<PortafolioDTO> ListaPortafolio = new();

    protected override async Task OnInitializedAsync()
    {
        await CargarPortafolio();
    }

    private async Task CargarPortafolio()
    {
        var response = await repositorio.Get<List<PortafolioDTO>>("/api/portafolio/listar");
        if (response?.Response != null)
        {
            ListaPortafolio = response.Response;
        }
    }

    private void NavegarAInsertar()
    {
        navigationManager.NavigateTo("/portafolio-insertar");
    }

    private void NavegarAEditar(int id)
    {
        navigationManager.NavigateTo($"/portafolio-editar/{id}");
    }

    private async Task ConfirmarEliminar(int id)
    {
        var result = await JS.InvokeAsync<IJSObjectReference>("Swal.fire", new
        {
            title = "¿Eliminar proyecto?",
            text = "¿Estás seguro de eliminar este proyecto del portafolio?",
            icon = "warning",
            showCancelButton = true,
            confirmButtonText = "Sí, eliminar",
            cancelButtonText = "Cancelar",
            background = "#fdfefe",
            color = "#616a6b",
            confirmButtonColor = "#3085d6",
            cancelButtonColor = "#d33",
            customClass = new { popup = "my-custom-class" }
        });

        // ⚠️ Verifica el resultado: debes capturarlo desde JS
        var confirmed = await JS.InvokeAsync<bool>("eval", "Swal.getPopup().querySelector('.swal2-confirm') !== null");

        if (confirmed)
        {
            await Eliminar(id);
        }
    }

    private async Task Eliminar(int id)
    {
        var response = await repositorio.Delete($"/api/portafolio/eliminar/{id}");
        if (response != null && !response.Error)
        {
            await JS.InvokeVoidAsync("Swal.fire", new
            {
                title = "Éxito",
                text = "Proyecto eliminado correctamente",
                icon = "success",
                confirmButtonColor = "#3085d6",
                background = "#fdfefe",
                color = "#616a6b"
            });

            await CargarPortafolio();
        }
        else
        {
            await JS.InvokeVoidAsync("Swal.fire", new
            {
                title = "Error",
                text = "No se pudo eliminar el proyecto",
                icon = "error",
                confirmButtonColor = "#3085d6",
                background = "#fdfefe",
                color = "#616a6b"
            });
        }
    }

}
